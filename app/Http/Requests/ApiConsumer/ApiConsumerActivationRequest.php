<?php

namespace App\Http\Requests\ApiConsumer;

use Dingo\Api\Http\FormRequest;

class ApiConsumerActivationRequest extends FormRequest
{

    /**
     * Redirect route for form validation failure.
     *
     * @var string
     */
    protected $redirect = '/api-consumer/reactivate';

    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        return [
            'starter_token'   => 'required|token_size|token_id:' . $this->get('api_consumer_id'),
            'api_consumer_id' => 'required|exists:api_consumers,id|token_match:' . $this->get('starter_token')
        ];
    }

    /**
     * Get the validation messages that apply to the request.
     *
     * @return array
     */
    public function messages()
    {
        // The API Consumer ID field is hidden and the Starter Token is generated by the app, so if things don't match
        // up here, someone has been naughty...
        $token_error = 'This API token has been compromised and can not be activated. Please try again.';

        return [
            'starter_token.required'      => 'starter token required' . $token_error,
            'starter_token.token_size'    => 'starter token size' . $token_error,
            'starter_token.token_id'      => 'starter token id' . $token_error,
            'api_consumer_id.required'    => 'id required' . $token_error,
            'api_consumer_id.exists'      => 'id exists' . $token_error,
            'api_consumer_id.token_match' => 'id match' . $token_error
        ];
    }
}
